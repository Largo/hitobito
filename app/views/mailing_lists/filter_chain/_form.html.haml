= standard_form(path_args(entry), noindent: true, stacked: true) do |f|

  .btn-toolbar
    - unless entry.persisted?
      .btn-group
        = f.button(t('global.button.search'), class: 'btn btn-primary', value: 'search')
    - if can?(:create, entry)
      .btn-group
        = f.button(t('people_filters.form.save_search'), class: 'btn btn-primary', value: 'save')
    
    = link_to(t('global.button.cancel'), group_mailing_list_subscriptions_path(@group, entry), class: 'link')

  = render_extensions :form, locals: { f: f }
  = f.error_messages


  - filter = entry.filter_chain[:attributes]

  .people_filter_attribute_form_template.hidden
    = people_filter_attribute_form_template
  .control_group{data: { types: people_filter_types_for_data_attribute } }
    #people_filter_attribute_forms
      = people_filter_attribute_forms(filter)

    = select(:attribute, :filter, people_filter_attributes_for_select, include_blank: true)

-#   = render 'search_or_save_buttons', f: f

-#   = render 'range', f: f

-#   .accordion
-#     = render(layout: 'filter', locals: { type: :role }) do
-#       = render 'role', f: f

-#     - if @qualification_kinds.present?
-#       = render(layout: 'filter', locals: { type: :qualification }) do
-#         = render 'qualification', f: f

-#     = render(layout: 'filter', locals: { type: :attributes }) do
-#       = render 'attributes', f: f

-#     = render(layout: 'filter', locals: { type: :tag }) do
-#       .label-columns
-#         = render 'tag', f: f
-#         = render 'tag_absence', f: f

-#   - if can?(:create, entry)
-#     = f.labeled_input_field :name, placeholder: t('.save_filter_placeholder')

-#   = render 'search_or_save_buttons', f: f

-# = entry_form(buttons_bottom: false) do |f|
-#   = f.labeled_input_field :name

