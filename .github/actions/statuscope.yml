name: "Notify Statuscope"
description: "Notify statuscope of the Job-Result"

inputs:
  repository:
    description: "Repository that the action is being run in"
    required: true
  test_result:
    description: "Result of the Test-Run to report to statuscope"
    required: true
  url:
    description: "URL to heartbeat-application, e.g. https://status.example.com"
    required: true
  token:
    description: "Token provided by statuscope"
    required: true

runs:
  using: composite
  steps:
    - name: 'Check Configuration'
      shell: bash
      run: |
        HEARTBEAT_APPLICATION="$(basename "${inputs.repository}-tests" | tr _ -)"
        HEARTBEAT_TOKEN=${inputs.token}"
        HEARTBEAT_URL=${inputs.url}"

        echo "HEARTBEAT_APPLICATION=${HEARTBEAT_APPLICATION}" >> $GITHUB_ENV
        echo "HEARTBEAT_TOKEN=$HEARTBEAT_TOKEN" >> $GITHUB_ENV
        echo "HEARTBEAT_URL=$HEARTBEAT_URL" >> $GITHUB_ENV

        echo "HEARTBEAT_APPLICATION is $HEARTBEAT_APPLICATION"
        (
          [[ "$HEARTBEAT_URL" != '' ]] &&
          [[ "$HEARTBEAT_TOKEN" != '' ]] &&
          echo "HEARTBEAT_URL and HEARTBEAT_TOKEN are present."
        ) || (
          echo "Please ensure that you have HEARTBEAT_URL and HEARTBEAT_TOKEN set as secrets"
          exit 1
        )

    - name: 'Send success'
      shell: bash
      if: ${{ inputs.test_result == true }}
      run: >
        curl -v $HEARTBEAT_URL/signal \
          -d application=$HEARTBEAT_APPLICATION \
          -d token=$HEARTBEAT_TOKEN \
          -d status=ok | jq .

    - name: 'Send failure'
      shell: bash
      if: ${{ input.test_result == false }}
      run: >
        curl -v $HEARTBEAT_URL/signal \
          -d application=$HEARTBEAT_APPLICATION \
          -d token=$HEARTBEAT_TOKEN \
          -d status=fail | jq .
